* cfDNA Copy Numer Alteration Analysis :biopipe:
:PROPERTIES:
:logging: nil
:header-args:bash: :tangle-mode (identity #o555)
:END:
** Setup
*** Snakemake
#+begin_src bash :tangle ./config/int_test.yaml
container: "~/sing_containers/mpnst.sif"
cfdna_cna_repo: "./"
log_dir: "test/logs"
threads: "4"
inputs_dir: "test/inputs"
frag_bam_dir: "test/frag-bam"
wig_dir: "test/wig"
ichor_hg19_dir: "test/ichor_hg19"
ichor_hg38_dir: "test/ichor_hg38"
cna_bam_dir: "test/bam"
#+end_src
*** Integration testing setup
#+begin_src bash
singularity shell --bind /mnt:/mnt ~/sing_containers/mpnst.sif

# Clear bam directory if present
if [ -r test/bam ]; then \rm -rf test/bam; fi
mkdir -p test/bam

# Create small bam files to store in repo
sambamba view -s .005 -f bam -t 36 /mnt/ris/aadel/mpnst/bam/lib070_dedup_sorted.bam > test/bam/lib001_hg19.bam
sambamba view -s .005 -f bam -t 36 /mnt/ris/aadel/mpnst/bam/lib054_dedup_sorted.bam > test/bam/lib002_hg19.bam
sambamba view -s .005 -f bam -t 36 /mnt/ris/aadel/mpnst/test/bam/new_HiSeq15_L002001_ACAC_extract_ds20.bam > test/bam/lib003_hg38.bam
sambamba view -s .005 -f bam -t 36 /mnt/ris/aadel/mpnst/test/bam/new_HiSeq15_L002001_ATCG_extract_ds20.bam > test/bam/lib004_hg38.bam

for file in test/bam/*.bam; do samtools index $file; done

#+end_src
** [[file:workflow/cfdna_wgs_cna.smk][cfDNA WGS CNA]] :smk:
:PROPERTIES:
:header-args:snakemake: :tangle ./workflow/cfdna_wgs_cna.smk
:END:
*** DONE Fragment size filtering
#+begin_src snakemake
rule frag_filt:
    input:
        config["cna_bam_dir"] + "/{library_id}.bam"
    params:
        out_dir = config["frag_bam_dir"]
    output:
        nohead = temp(config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.nohead"),
        onlyhead = temp(config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.onlyhead"),
        final = config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.bam",
    shell:
        """
        frag_min=$(echo {wildcards.frag_distro} | sed -e "s/_.*$//g")
        frag_max=$(echo {wildcards.frag_distro} | sed -e "s/^.*_//g")
        {config[cfdna_cna_repo]}/workflow/scripts/frag_filt.sh {input} \
                                      {output.nohead} \
                                      $frag_min \
                                      $frag_max \
                                      {config[threads]} \
                                      {output.onlyhead} \
                                      {output.final}
        """
#+end_src

#+begin_src bash :tangle ./workflow/scripts/frag_filt.sh

# Steps
## Filter by absolute value of TLEN for each read
sambamba view -t $5 $1 | awk -F'\t' -v upper="$4" 'sqrt($9*$9) < upper {print $0}' | awk -F'\t' -v lower="$3" 'sqrt($9*$9) > lower {print $0}'> $2

## Restore header
sambamba view -H $1 > $6

cat $6 $2 | sambamba view -t 4 -S -f bam /dev/stdin | sambamba sort -t 4 -o $7 /dev/stdin

#+end_src

*** DONE Convert bam to wig
#+begin_src snakemake
rule bam_to_wig:
    input: config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.bam",
    output: config["wig_dir"] + "/{library_id}_frag{frag_distro}.wig",
    params:
        chrs = "chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX"
    shell:
        """
        /opt/hmmcopy_utils/bin/readCounter --window 1000000 --quality 20 \
        --chromosome {params.chrs} \
        {input} > {output}
        """
#+end_src
- testing
  #+begin_src bash
#singularity shell --bind /mnt:/mnt ~/sing_containers/mpnst.sif


/opt/hmmcopy_utils/bin/readCounter \
 --window 1000000 \
 --quality 20 \
 --chromosome "chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22,chrX" \
 ~/repos/cfdna-cna/test/bam/lib004_hg38.bam > /tmp/test.wig

#+end_src
*** DONE Run hg19 ichor
#+begin_src snakemake
rule hg19_ichor:
    input:
        config["wig_dir"] + "/{library_id}_frag{frag_distro}.wig",
    output:
        config["ichor_hg19_dir"] + "/{library_id}_frag{frag_distro}.cna.seg",
    shell:
        """
        Rscript {config[cfdna_cna_repo]}/workflow/scripts/MOD_runIchorCNA.R \
         --id {wildcards.library_id}_frag{wildcards.frag_distro} \
         --WIG {input} \
         --gcWig /opt/ichorCNA/inst/extdata/gc_hg19_1000kb.wig \
         --normal "c(0.95, 0.99, 0.995, 0.999)" \
         --ploidy "c(2)" \
         --maxCN 3 \
         --estimateScPrevalence FALSE \
         --scStates "c()" \
         --outDir {config[ichor_hg19_dir]}
        """
#+end_src
*** DONE Run hg38 ichor
#+begin_src snakemake
rule hg38_ichor:
    input:
        config["wig_dir"] + "/{library_id}_frag{frag_distro}.wig",
    output:
        config["ichor_hg38_dir"] + "/{library_id}_frag{frag_distro}.cna.seg",
    shell:
        """
        Rscript {config[cfdna_cna_repo]}/workflow/scripts/MOD_runIchorCNA.R \
         --id {wildcards.library_id}_frag{wildcards.frag_distro} \
         --WIG {input} \
         --gcWig /opt/ichorCNA/inst/extdata/gc_hg38_1000kb.wig \
         --mapWig /opt/ichorCNA/inst/extdata/map_hg38_1000kb.wig \
         --centromere /opt/ichorCNA/inst/extdata/GRCh38.GCA_000001405.2_centromere_acen.txt \
         --normal "c(0.95, 0.99, 0.995, 0.999)" \
         --ploidy "c(2)" \
         --maxCN 3 \
         --estimateScPrevalence FALSE \
         --scStates "c()" \
         --outDir {config[ichor_hg38_dir]}
        """
#+end_src
- Testing
  - hg38 test
    #+begin_src bash
  # mkdir /tmp/ichor_out
  # singularity shell ~/sing_containers/mpnst.sif

  Rscript /opt/ichorCNA/scripts/runIchorCNA.R --id tumor_sample \
  --WIG /tmp/test.wig --ploidy "c(2,3)" --normal "c(0.5,0.6,0.7,0.8,0.9)" --maxCN 5 \
  --gcWig /opt/ichorCNA/inst/extdata/gc_hg38_1000kb.wig \



  --includeHOMD False --chrs "c(1:22, \"X\")" --chrTrain "c(1:22)" \
  --estimateNormal True --estimatePloidy True --estimateScPrevalence True \
  --scStates "c(1,3)" --txnE 0.9999 --txnStrength 10000 --outDir /tmp/ichor_out
  #+end_src
  - works
    - hg19
      #+begin_src bash
  #mkdir -p /tmp/ichor_out
  #singularity shell ~/sing_containers/mpnst.sif

  # Notes
  ##
  ## Will overwrite target files with a warning
  ##
  ##


  Rscript /opt/ichorCNA/scripts/runIchorCNA.R --id tumor_sample \
    --WIG ~/repos/cfdna-cna/test/wig/lib002_hg19_frag90_150.wig --ploidy "c(2,3)" --normal "c(0.5,0.6,0.7,0.8,0.9)" --maxCN 5 \
    --gcWig /opt/ichorCNA/inst/extdata/gc_hg19_1000kb.wig \
    --mapWig /opt/ichorCNA/inst/extdata/map_hg19_1000kb.wig \
    --centromere /opt/ichorCNA/inst/extdata/GRCh37.p13_centromere_UCSC-gapTable.txt \
    --normalPanel /opt/ichorCNA/inst/extdata/HD_ULP_PoN_1Mb_median_normAutosome_mapScoreFiltered_median.rds \
    --includeHOMD False --chrs "c(1:22, \"X\")" --chrTrain "c(1:22)" \
    --estimateNormal True --estimatePloidy True --estimateScPrevalence True \
    --scStates "c(1,3)" --txnE 0.9999 --txnStrength 10000 --outDir /tmp/ichor_out
  #+end_src
      #+begin_src bash
  # mkdir /tmp/ichor_out
  # singularity shell ~/sing_containers/mpnst.sif

  Rscript ./workflow/scripts/MOD_runIchorCNA.R --id tumor_sample \
    --WIG ~/repos/cfdna-cna/test/wig/lib002_frag90_150.wig --ploidy "c(2,3)" --normal "c(0.5,0.6,0.7,0.8,0.9)" --maxCN 5 \
    --gcWig /opt/ichorCNA/inst/extdata/gc_hg19_1000kb.wig \
    --mapWig /opt/ichorCNA/inst/extdata/map_hg19_1000kb.wig \
    --centromere /opt/ichorCNA/inst/extdata/GRCh37.p13_centromere_UCSC-gapTable.txt \
    --normalPanel /opt/ichorCNA/inst/extdata/HD_ULP_PoN_1Mb_median_normAutosome_mapScoreFiltered_median.rds \
    --includeHOMD False --chrs "c(1:22, \"X\")" --chrTrain "c(1:22)" \
    --estimateNormal True --estimatePloidy True --estimateScPrevalence True \
    --scStates "c(1,3)" --txnE 0.9999 --txnStrength 10000 --outDir /tmp/ichor_out
  #+end_src
      - running an old hg19
        #+begin_src bash
      Rscript /opt/ichorCNA/scripts/runIchorCNA.R --id tumor_sample \
        --WIG /tmp/test_hg19.wig --ploidy "c(2,3)" --normal "c(0.5,0.6,0.7,0.8,0.9)" --maxCN 5 \
        --gcWig /opt/ichorCNA/inst/extdata/gc_hg19_1000kb.wig \
        --mapWig /opt/ichorCNA/inst/extdata/map_hg19_1000kb.wig \
        --centromere /opt/ichorCNA/inst/extdata/GRCh37.p13_centromere_UCSC-gapTable.txt \
        --normalPanel /opt/ichorCNA/inst/extdata/HD_ULP_PoN_1Mb_median_normAutosome_mapScoreFiltered_median.rds \
        --includeHOMD False --chrs "c(1:22, \"X\")" --chrTrain "c(1:22)" \
        --estimateNormal True --estimatePloidy True --estimateScPrevalence True \
        --scStates "c(1,3)" --txnE 0.9999 --txnStrength 10000 --outDir /tmp/ichor_out_test
      #+end_src
  - d
    #+begin_src bash
  Rscript workflow/scripts/MOD_runIchorCNA.R --id lib003_hg38_frag90_150 \
          --WIG test/wig/lib003_hg38_frag90_150.wig \
          --gcWig /opt/ichorCNA/inst/extdata/gc_hg38_1000kb.wig \
          --mapWig /opt/ichorCNA/inst/extdata/map_hg38_1000kb.wig \
          --centromere /opt/ichorCNA/inst/extdata/GRCh38.GCA_000001405.2_centromere_acen.txt \
          --normal "c(0.95, 0.99, 0.995, 0.999)" \
          --ploidy "c(2)" \
          --maxCN 3 \
          --estimateScPrevalence FALSE \
          --scStates "c()" \
          --outDir test/ichor_hg38



          # --normalPanel /opt/ichorCNA/inst/extdata/HD_ULP_PoN_hg38_1Mb_median_normAutosome_median.rds \
  #                                                   HD_ULP_PoN_hg38_1Mb_median_normAutosome_median.rds
  #+end_src
- Notes: Fails when extdata PoN specified
** DONE Integration testing                                                :smk:
#+begin_src bash :returns results
basecamp/src/smk_dry_run.sh config/repo_test.yaml workflow/cfdna_cna_int_test.smk
basecamp/src/smk_run.sh config/repo_test.yaml workflow/cfdna_cna_int_test.smk
basecamp/src/smk_forced_run.sh config/repo_test.yaml workflow/cfdna_cna_int_test.smk
#+end_src
#+begin_src snakemake :tangle ./workflow/int_test.smk
container: config["container"]

HG19_IDS = ["lib001_hg19", "lib002_hg19"]
HG38_IDS = ["lib003_hg38", "lib004_hg38"]

rule all:
    input:
        expand(config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.bam", library_id = HG19_IDS, frag_distro = ["90_150"]),
        expand(config["frag_bam_dir"] + "/{library_id}_frag{frag_distro}.bam", library_id = HG38_IDS, frag_distro = ["90_150"]),
        expand(config["wig_dir"] + "/{library_id}_frag{frag_distro}.wig", library_id = HG19_IDS, frag_distro = ["90_150"]),
        expand(config["wig_dir"] + "/{library_id}_frag{frag_distro}.wig", library_id = HG38_IDS, frag_distro = ["90_150"]),
        expand(config["ichor_hg19_dir"] + "/{library_id}_frag{frag_distro}.cna.seg", library_id = HG19_IDS, frag_distro = ["90_150"]),
        expand(config["ichor_hg38_dir"] + "/{library_id}_frag{frag_distro}.cna.seg", library_id = HG38_IDS, frag_distro = ["90_150"]),

include: "cfdna_wgs_cna.smk"
#+end_src

** README
*** Change Log
- [2022-04-29 Fri]: First commit, copying from the old mpnst-cna repo. Untested.
** Ideas
- Ideas- biocparallel? for ichor sections
- https://mail.google.com/mail/u/0/#inbox/FMfcgzGmtrMStSdxMHbXDpqGDVTrjMpl
- ichor PON
- extract tf
  tfRAW = as_tibble(read.table(file.path(repo,"data/tf_summary"), header = F, sep = '\t'))

target_cnaRAW = as_tibble(read.table(file.path(repo,"data/target_cna.bed"), sep = '\t', header = F))

taylor_washoutRAW = as_tibble(read.csv(file.path(repo, "data/cfDNA PN and MPNST washout libraries for ROC.csv"), header = T))

coverageRAW = as_tibble(read.table(file.path(repo,"data/all_dedup_coverage.tsv"), sep='\t', header = T))

librariesRAW = as_tibble(
  read.csv(file.path(repo,"data/library_index.csv"), header = T)
)

washout_libs = as_tibble(
read.csv(file.path(repo,"data/washout_libs.csv"), header = T)
)

specimensRAW = as_tibble(
  read.csv(file.path(repo,"data/specimen_index.csv"), header = T)
  )

subjectsRAW = as_tibble(
  read.csv(file.path(repo, "data/subject_index.csv"), header = T)
  )

  #+begin_src R
library(tidyverse)

load("/mnt/ris/aadel/mpnst/data_model/data_model.RData")

ls()

names(libraries_full)

class(libraries_full$collect_date)

libraries_full$collect_date = as.Date(libraries_full$collect_date)

as.numeric(libraries_full$collect_date[[1]]- libraries_full$collect_date[[2]])

test =
  libraries_full %>% arrange(collect_date) %>% group_by(participant_id, isolation_type) %>%
  mutate(collect_day = as.numeric(collect_date - first(collect_date))) %>%
  mutate(collect_day = replace_na(collect_day, 0))

tf = read.table("/tmp/tf.tsv", header = F, sep = '\t')
colnames(tf) = c("libnfrag", "tf", "ploidy")
tf$library_id = substr(tf$libnfrag, 1, 6)

tf2 =
  tf %>% filter(grepl("sub20m_frag90", libnfrag))


test2=tf2 %>% left_join(test, by = "library_id")

write.csv(file ="/tmp/test.csv", test2)
test %>% select(participant_id, collect_day) %>% arrange(participant_id) %>% print(n = Inf)



test$collect_day

  case_when(collect_date == first(collect_date) ~ 0,
                                 collect_date > first(collect_date) ~ collect_date - first(collect_date)))




) %>% select(library_id, participant_id, collect_day)
#+end_src
*** Dev
:PROPERTIES:
:header-args:snakemake: :tangle no
:END:
**** Aggregate ichor
**** CN LOH
https://github.com/mskcc/facets
https://www.ncbi.nlm.nih.gov/pmc/articles/PMC5027494/
- a CN LOH call is NOT available in ichor, is in titanCNA
- FACETS is used for CN-LOH in cfDNA- https://aacrjournals.org/clincancerres/article/28/3/526/678032/Activation-of-PI3K-AKT-Pathway-Is-a-Potential

  https://sites.google.com/site/mskfacets/
;https://www.ncbi.nlm.nih.gov/pmc/articles/PMC6267593/

facets for independent ichor confirm? https://github.com/mskcc/facets/issues/72
ichor does cn loh calls- check out
